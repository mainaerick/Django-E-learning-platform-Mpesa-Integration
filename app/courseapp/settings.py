"""
Django settings for courseapp project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url
import django_heroku
from dotenv import dotenv_values
config = dotenv_values(".env")
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(config['DEBUG'], 0))

ALLOWED_HOSTS = [
]
ALLOWED_HOSTS.extend(filter(None, config['ALLOWED_HOSTS'].split(',')))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'membership.apps.MembershipConfig',
    'course.apps.CourseConfig',
]
AUTH_USER_MODEL = 'membership.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'courseapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'course/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'courseapp.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': config['DB_HOST'],
        'NAME':config['DB_NAME'],
        'USER':config['DB_USER'],
        'PASSWORD':config['DB_PASS']
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL =  '/static/static/'
MEDIA_URL = MEDIA_URL = '/static/media/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
    
]


MEDIA_ROOT = '/vol/web/media'
STATIC_ROOT = '/vol/web/static'
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# prod_db = dj_database_url.config(conn_max_age=500)
# DATABASES['default'].update(prod_db)
# django_heroku.settings(locals())
Business_short_code = config['Business_short_code']
passkey = config['passkey']
consumer_key = config['consumer_key']
consumer_secret = config['consumer_secret']
api_URL = config['api_URL']  #live
api_URL_token = config['api_URL_token']
callbackUrl = config['callbackUrl']
if DEBUG:
    mpesa_consumer_key = "kAXqU8JZzdzxUchRKnnaKVPX5AVl1MLZ"
    mpesa_consumer_secret = "Dmpu7oYaCULD1xZG"
else:
    mpesa_consumer_key = "qq4lh4XeRQDGKVnvJS4OyGYL2xFtJT2s"
    mpesa_consumer_secret = "GdWPdMXMWKVMu7Xm"
